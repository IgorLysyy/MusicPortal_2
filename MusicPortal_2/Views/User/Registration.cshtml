@model MusicPortal_2.Models.UserAccount
@{
    ViewBag.Title = "Registration";
}



<div class="limiter">
    <div class="container-login100">
        <div class="wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <span class="login100-form-title p-b-32">
                    Create Login
                </span>


                @Html.LabelFor(model => model.Nickname, htmlAttributes: new { @class = "txt1 p-b-11" })
                <div class="wrap-input100 validate-input m-b-36" data-validate="Username is required">

                    @Html.EditorFor(model => model.Nickname, new { htmlAttributes = new { @class = "input100" } })
                    <span class="focus-input100"></span>
                </div>
                <div class=" validate-input m-b-36" data-validate="Username is required">

                    @Html.ValidationMessageFor(model => model.Nickname, "", new { @class = "text-danger" })
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "txt1 p-b-11" })
                <div class="wrap-input100 validate-input m-b-36" data-validate="Username is required">

                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "input100" } })

                    <span class="focus-input100"></span>

                </div>
                <div class=" validate-input m-b-36" data-validate="Username is required">

                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "txt1 p-b-11" })
                <div class="wrap-input100 validate-input m-b-12" data-validate="Password is required">
                    <span class="btn-show-pass">
                        <i class="fa fa-eye"></i>
                    </span>

                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "input100" } })
                    <span class="focus-input100"></span>

                </div>
                <div class=" validate-input m-b-36" data-validate="Username is required">

                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
                <label class="txt1 p-b-11">Repeat password</label>
                <div class="wrap-input100 validate-input m-b-12" data-validate="Password is required">
                    <span class="btn-show-pass">
                        <i class="fa fa-eye"></i>
                    </span>

                    @Html.EditorFor(model => model.RepeatPassword, new { htmlAttributes = new { @class = "input100" } })
                    <span class="focus-input100"></span>
                </div>

                <div class="container-login100-form-btn ">
                    <button class="login100-form-btn" type="submit">
                        Create
                    </button>
                    @Html.ActionLink("Login", "Login", "User","", new { @class = "login100-form-btn",@style= "color:white;margin-left:11vh" })


                </div>

            }
        </div>

    </div>
</div>
